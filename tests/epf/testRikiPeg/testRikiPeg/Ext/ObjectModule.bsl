#region tests
Перем КонтекстЯдра;
Перем Ожидаем;

Перем peg;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	НаборТестов.НачатьГруппу("Проверка");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку");
	НаборТестов.НачатьГруппу("Простые парсеры");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_char_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_char_neg");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_ichar_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_ichar_neg");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_string_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_string_neg");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_istring_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_istring_neg");
	НаборТестов.НачатьГруппу("Повторения");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_12_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_12_neg");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_02_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_02_neg");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_01_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_01_neg");
	НаборТестов.НачатьГруппу("Просмотр");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_lookahead_pos_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_lookahead_pos_neg");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_lookahead_neg_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_lookahead_neg_neg");
	НаборТестов.НачатьГруппу("Модификаторы");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_code_pos");
	НаборТестов.Добавить("ТестДолжен_ВыполнитьПроверку_binding_pos");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
	ФайлТеста = Новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	ФайлОбработки = ФайлТеста.Путь + "..\rikiPEG.epf";
	
	peg = ВнешниеОбработки.Создать(ФайлОбработки, Ложь);
	
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
КонецПроцедуры

#EndRegion

Процедура ТестДолжен_ВыполнитьПроверку() Экспорт
	
	Ожидаем.Что(peg.testCheck(),"Обработка корректно подключилась").Равно(1);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_char_pos() Экспорт
	
	peg.addParser("test", peg.matchChar("б"));
	result = peg.apply("болт", "test");
	Ожидаем.Что(result.result,"Корректно прочли символ").Равно("б");
	Ожидаем.Что(result.state.column).Равно(2);
	Ожидаем.Что(result.state.pos).Равно(2);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_char_neg() Экспорт
	
	peg.addParser("test", peg.matchChar("б"));
	result = peg.apply("олт", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(ложь);
	
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_ichar_pos() Экспорт
	
	peg.addParser("test", peg.matchiChar("б"));
	result = peg.apply("Болт", "test");
	Ожидаем.Что(result.result,"Корректно прочли символ").Равно("Б");
	Ожидаем.Что(result.state.column).Равно(2);
	Ожидаем.Что(result.state.pos).Равно(2);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
	peg.addParser("test", peg.matchiChar("б"));
	result = peg.apply("болт", "test");
	Ожидаем.Что(result.result,"Корректно прочли символ").Равно("б");
	Ожидаем.Что(result.state.column).Равно(2);
	Ожидаем.Что(result.state.pos).Равно(2);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_ichar_neg() Экспорт
	
	peg.addParser("test", peg.matchiChar("б"));
	result = peg.apply("олт", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(ложь);
	
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_string_pos() Экспорт
	
	peg.addParser("test", peg.matchString("Болт"));
	result = peg.apply("Болтик", "test");
	Ожидаем.Что(result.result[0],"Корректно прочли строку").Равно("Б");
	Ожидаем.Что(result.result[1],"Корректно прочли строку").Равно("о");
	Ожидаем.Что(result.result[2],"Корректно прочли строку").Равно("л");
	Ожидаем.Что(result.result[3],"Корректно прочли строку").Равно("т");
	Ожидаем.Что(result.state.column).Равно(5);
	Ожидаем.Что(result.state.pos).Равно(8);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_string_neg() Экспорт
	
	peg.addParser("test", peg.matchString("Болт"));
	result = peg.apply("болтик", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(ложь);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_istring_pos() Экспорт
	
	peg.addParser("test", peg.matchiString("Болт"));
	result = peg.apply("БОЛтик", "test");
	Ожидаем.Что(result.result[0],"Корректно прочли строку").Равно("Б");
	Ожидаем.Что(result.result[1],"Корректно прочли строку").Равно("О");
	Ожидаем.Что(result.result[2],"Корректно прочли строку").Равно("Л");
	Ожидаем.Что(result.result[3],"Корректно прочли строку").Равно("т");
	Ожидаем.Что(result.state.column).Равно(5);
	Ожидаем.Что(result.state.pos).Равно(8);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_istring_neg() Экспорт
	
	peg.addParser("test", peg.matchiString("Болт"));
	result = peg.apply("ботик", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(ложь);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_12_pos() Экспорт
	
	peg.addParser("test", peg.plus(peg.matchChar("А")));
	result = peg.apply("ААб", "test");
	Ожидаем.Что(result.result[0],"Корректно прочли строку").Равно("А");
	Ожидаем.Что(result.result[1],"Корректно прочли строку").Равно("А");
	Ожидаем.Что(result.state.column).Равно(3);
	Ожидаем.Что(result.state.pos).Равно(4);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_12_neg() Экспорт
	
	peg.addParser("test", peg.plus(peg.matchChar("А")));
	result = peg.apply("ботик", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(ложь);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_02_pos() Экспорт
	
	peg.addParser("test", peg.star(peg.matchChar("А")));
	result = peg.apply("АААБОЛтик", "test");
	Ожидаем.Что(result.result[0],"Корректно прочли строку").Равно("А");
	Ожидаем.Что(result.result[1],"Корректно прочли строку").Равно("А");
	Ожидаем.Что(result.result[2],"Корректно прочли строку").Равно("А");
	Ожидаем.Что(result.state.column).Равно(4);
	Ожидаем.Что(result.state.pos).Равно(6);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_02_neg() Экспорт
	
	peg.addParser("test", peg.star(peg.matchChar("А")));
	result = peg.apply("ботик", "test");
	Ожидаем.Что(result.result.count()).Равно(0);
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(true);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_01_pos() Экспорт
	
	peg.addParser("test", peg.quest(peg.matchChar("А")));
	result = peg.apply("АААБОЛтик", "test");
	Ожидаем.Что(result.result).Равно("А");
	Ожидаем.Что(result.state.column).Равно(2);
	Ожидаем.Что(result.state.pos).Равно(2);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_01_neg() Экспорт
	peg.addParser("test", peg.quest(peg.matchChar("А")));
	result = peg.apply("БОЛтик", "test");
	Ожидаем.Что(result.result).Равно(Undefined);
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);

КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_lookahead_pos_pos() Экспорт
	
	peg.addParser("test", peg.positive(peg.matchChar("А")));
	result = peg.apply("АААБОЛтик", "test");
	Ожидаем.Что(result.result).Равно(Undefined);
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);

	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_lookahead_pos_neg() Экспорт
	
	peg.addParser("test", peg.positive(peg.matchChar("А")));
	result = peg.apply("БОЛтик", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(false);


КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_lookahead_neg_pos() Экспорт
	
	peg.addParser("test", peg.neg(peg.matchChar("А")));
	result = peg.apply("БОЛтик", "test");
	Ожидаем.Что(result.result).Равно(Undefined);
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_lookahead_neg_neg() Экспорт
	
	peg.addParser("test", peg.neg(peg.matchChar("А")));
	result = peg.apply("АБОЛтик", "test");
	Ожидаем.Что(result.state.column).Равно(1);
	Ожидаем.Что(result.state.pos).Равно(0);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(false);


КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_code_pos() Экспорт
	
	peg.addParser("test", peg.fn(peg.matchString("Болт"),"result = StrConcat(result,"""");"));
	result = peg.apply("Болтик", "test");
	Ожидаем.Что(result.result,"Корректно прочли строку").Равно("Болт");
	Ожидаем.Что(result.state.column).Равно(5);
	Ожидаем.Что(result.state.pos).Равно(8);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьПроверку_binding_pos() Экспорт
	
	peg.addParser("test", peg.fn(peg.bind("a",peg.matchString("Болт")),"result = StrConcat(a,"""");"));
	result = peg.apply("Болтик", "test");
	Ожидаем.Что(result.result,"Корректно прочли строку").Равно("Болт");
	Ожидаем.Что(result.state.column).Равно(5);
	Ожидаем.Что(result.state.pos).Равно(8);
	Ожидаем.Что(result.state.line).Равно(1);
	Ожидаем.Что(result.succes).Равно(Истина);
	
КонецПроцедуры

